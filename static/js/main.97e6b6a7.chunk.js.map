{"version":3,"sources":["components/header/index.js","components/header/Header.js","routes/not-found/index.js","routes/not-found/NotFound.js","storedMovies.js","api.js","actions/movies.js","components/button/Button.js","components/button/index.js","utils.js","components/movie/index.js","components/movie/Movie.js","components/loading/index.js","components/loading/Loading.js","routes/home/Home.js","routes/home/index.js","actions/upcomingMovies.js","components/showtimes/index.js","components/showtimes/Showtimes.js","routes/moviePage/MoviePage.js","routes/moviePage/index.js","routes/upcomingMovies/UpcomingMovies.js","routes/upcomingMovies/index.js","App.js","reducers/movies.js","reducers/upcomingMovies.js","reducers/index.js","ScrollToTop.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","style","textDecoration","src","concat","process","alt","Component","NotFound","Helmet_default","title","getStoredMovies","_callee","storedMovies","timestamp","movies","regenerator_default","wrap","_context","prev","next","JSON","parse","window","localStorage","getItem","Date","abrupt","stop","this","setStoredMovies","_callee2","data","_context2","setItem","stringify","getStoredUpcomingMovies","_callee3","_context3","setStoredUpcomingMovies","_callee4","_context4","baseurl","options","headers","authorization","method","url","response","result","fetch","sent","json","status","api","getMovies","getUpcomingMovies","MOVIES_REQUEST","MOVIES_ERROR","MOVIES_SUCCESS","moviesError","message","type","isFetching","_ref","Object","asyncToGenerator","mark","dispatch","t0","_x","apply","arguments","Button","_this$props","props","children","onClick","pushed","classes","defaultProps","months","Movie","upcoming","movie","ratings","date","month","getMonth","dateString","getDate","getFullYear","imdb","id","rating","poster","Loading","Home","state","allMovies","done","cinemas","name","sortMovies","setState","_this$state","console","info","error","index","newMovieList","forEach","showMovie","cinema","showtimes","filter","showtime","length","push","_this2","_this$props2","_this$state2","loading","map","components_button","key","cinemaButton","components_movie","withRouter","connect","UPCOMING_MOVIES_REQUEST","UPCOMING_MOVIES_ERROR","UPCOMING_MOVIES_SUCCESS","isFetchingUpcoming","upcomingMovies","Showtimes","theater","_theater$cinema","schedule","href","purchase_url","time","MoviePage","doneMovies","doneUpcoming","match","params","parseInt","isUpcoming","ratingSection","dateSection","_movie$","ids","plot","directors_abridged","trailers","results","trailerPlaylist","directors","i","listDirectors","width","height","align","frameBorder","allow","allowFullScreen","components_showtimes","UpcomingMovies","sortedMovies","newMovies","sort","movieA","movieB","App","defaultTitle","titleTemplate","header","Switch","location","Route","path","exact","component","build_default","buttonText","buttonStyle","cursor","initialState","combineReducers","undefined","action","objectSpread","ScrollToTop","prevProps","scrollTo","React","Boolean","hostname","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","react_redux_es","BrowserRouter","basename","src_ScrollToTop","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.97e6b6a7.chunk.js","sourcesContent":["import Header from './Header';\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Header.css';\r\n\r\nconst basename = process.env.PUBLIC_URL || '';\r\n\r\nexport default class Header extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"nav-bar\">\r\n        <Link className=\"home-button\" to=\"/\" style={{ textDecoration: 'none' }}>\r\n          <img src={`${basename}/Home.png`} alt=\"Home Icon\" />\r\n        </Link>\r\n        <Link to=\"/upcoming\" style={{ textDecoration: 'none' }}>\r\n          <p className=\"upcoming-button\">Væntanlegt</p>\r\n        </Link>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n}","import NotFound from './NotFound';\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport './NotFound.css';\r\n\r\nexport default class Home extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"not-found\">\r\n        <Helmet title=\"Síða fannst ekki\" />\r\n        <h1>Síða fannst ekki</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// Föll til að geyma og sækja myndir frá localstorage\r\nasync function getStoredMovies() {\r\n  const storedMovies = JSON.parse(window.localStorage.getItem('movies'));\r\n  \r\n  if (storedMovies) {\r\n    const { timestamp } = storedMovies;\r\n    if (new Date() - new Date(timestamp) < 1000 * 60 * 60 * 2) {\r\n      const { movies } = storedMovies;\r\n      return movies;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nasync function setStoredMovies(movies) {\r\n  const data = {\r\n    movies,\r\n    timestamp: new Date(),\r\n  }\r\n\r\n  window.localStorage.setItem('movies', JSON.stringify(data));\r\n}\r\n\r\nasync function getStoredUpcomingMovies() {\r\n  const storedMovies = JSON.parse(window.localStorage.getItem('upcomingMovies'));\r\n  \r\n  if (storedMovies) {\r\n    const { timestamp } = storedMovies;\r\n    if (new Date() - new Date(timestamp) < 1000 * 60 * 60 * 2) {\r\n      const { movies } = storedMovies;\r\n      return movies;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nasync function setStoredUpcomingMovies(movies) {\r\n  const data = {\r\n    movies,\r\n    timestamp: new Date(),\r\n  }\r\n\r\n  window.localStorage.setItem('upcomingMovies', JSON.stringify(data));\r\n}\r\n\r\nexport {\r\n  getStoredMovies,\r\n  setStoredMovies,\r\n  getStoredUpcomingMovies,\r\n  setStoredUpcomingMovies,\r\n}","import { setStoredMovies, setStoredUpcomingMovies } from './storedMovies';\r\n\r\nconst baseurl = process.env.REACT_APP_SERVICE_URL || \"https://bio-server.herokuapp.com\";\r\n\r\nconst options = {\r\n  headers: {\r\n    authorization: 'Bearer Kappa',\r\n  },\r\n  method: 'GET',\r\n};\r\n\r\nasync function getMovies() {\r\n  const url = baseurl;\r\n\r\n  const response = await fetch(url, options);\r\n\r\n  const result = await response.json();\r\n\r\n  if (response.status === 200) {\r\n    setStoredMovies(result);\r\n  }\r\n\r\n  return { result, status: response.status };\r\n}\r\n\r\nasync function getUpcomingMovies() {\r\n  const url = `${baseurl}/upcoming`;\r\n\r\n  const response = await fetch(url, options);\r\n\r\n  const result = await response.json();\r\n\r\n  if (response.status === 200) {\r\n    setStoredUpcomingMovies(result);\r\n  }\r\n\r\n  return { result, status: response.status };\r\n}\r\n\r\nexport default {\r\n  getMovies,\r\n  getUpcomingMovies,\r\n}","import api from '../api';\r\n\r\nexport const MOVIES_REQUEST = 'MOVIES_REQUEST';\r\nexport const MOVIES_ERROR = 'MOVIES_ERROR';\r\nexport const MOVIES_SUCCESS = 'MOVIES_SUCCESS';\r\n\r\nfunction requestMovies() {\r\n  return {\r\n    type: MOVIES_REQUEST,\r\n    isFetching: true,\r\n    movies: null,\r\n  }\r\n}\r\n\r\nfunction moviesError(message) {\r\n  return {\r\n    type: MOVIES_ERROR,\r\n    isFetching: false,\r\n    movies: null,\r\n    message,\r\n  }\r\n}\r\n\r\nfunction receiveMovies(movies) {\r\n  return {\r\n    type: MOVIES_SUCCESS,\r\n    isFetching: false,\r\n    movies,\r\n  }\r\n}\r\n\r\nexport const getMovies = () => {\r\n  return async (dispatch) => {\r\n    dispatch(requestMovies());\r\n\r\n    let response;\r\n    try {\r\n      response = await api.getMovies();\r\n    } catch (e) {\r\n      return dispatch(moviesError(e));\r\n    }\r\n\r\n    if (response.status === 401) {\r\n      dispatch(moviesError(response.result));\r\n    } else {\r\n      const { result } = response;\r\n      dispatch(receiveMovies(result));\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.css';\r\n\r\n/* todo aðrar útgáfur af takka fyrir disabled, minni takka fyrir logout og \"warning\" takka */\r\n\r\nexport default class Button extends Component {\r\n\r\n  static propTypes = {\r\n    onClick: PropTypes.func,\r\n    children: PropTypes.node,\r\n  }\r\n\r\n  static defaultProps = {\r\n    className: '',\r\n    onClick: () => {},\r\n  }\r\n\r\n  render() {\r\n    const { children, onClick, type, pushed } = this.props;\r\n\r\n    let classes = `button ${type}`\r\n    if (pushed) classes += ' pushed';\r\n\r\n    return (\r\n      <button onClick={onClick} className={classes}>{children}</button>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","import Button from './Button';\r\nexport default Button;\r\n","export const months = [\r\n  'Janúar',\r\n  'Febrúar',\r\n  'Mars',\r\n  'Apríl',\r\n  'Maí',\r\n  'Júní',\r\n  'Júlí',\r\n  'Ágúst',\r\n  'September',\r\n  'Október',\r\n  'Nóvember',\r\n  'Desember',\r\n];\r\n\r\n/* Notað til að bæta kommu milli leikstjóra ef þeir eru\r\n     fleiri en einn, 'og' síðan sett fyrir seinasta leikstjóran */\r\nexport function listDirectors(result) {\r\n  let directors = `Leikstjóri: ${result[0].name}`;\r\n  if (result.length > 1) {\r\n    directors = 'Leikstjórar: ' + result[0].name;\r\n    for (let i = 1; i < result.length; i++) {\r\n      if (i === result.length-1) {\r\n        directors += ` og ${result[i].name}`;\r\n      } else {\r\n        directors += `, ${result[i].name}`;\r\n      }\r\n    }\r\n  }\r\n  return directors;\r\n}","import Movie from './Movie';\r\nexport default Movie;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { months } from '../../utils';\r\n\r\nimport './Movie.css';\r\n\r\nconst basename = process.env.PUBLIC_URL || '';\r\n\r\nexport default class Movie extends Component {\r\n\r\n  rating() {\r\n    const { upcoming, movie } = this.props;\r\n    const { ratings } = movie;\r\n    if (!upcoming) {\r\n      return (\r\n        <div className=\"rating\">\r\n          <p>{ratings.imdb}</p>\r\n          <img className=\"logo\" src={`${basename}/imdb.png`} alt=\"imdb logo\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      const { date } = movie;\r\n      const month = months[date.getMonth()];\r\n      const dateString = `${date.getDate()}. ${month} ${date.getFullYear()}`;\r\n      return (\r\n        <p className=\"release-date\">{dateString}</p>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movie } = this.props;\r\n    const { title, id } = movie;\r\n    const rating = this.rating();\r\n    // Passa uppá ef það vantar mynd\r\n    let { poster } = movie;\r\n    poster = poster === 'https://kvikmyndir.is/images/poster/' ? `${basename}/noPoster.png` : poster;\r\n\r\n    return (\r\n      <figure className=\"movieSpace\">\r\n        <Link to={ \"/movie/\" + id} style={{ textDecoration: 'none' }}>\r\n          <img src={poster} alt={\"Mynd fyrir bíómyndina \" + title}/>\r\n          <figcaption>\r\n            <p className=\"title\">{title}</p>\r\n            {rating}\r\n          </figcaption>\r\n        </Link>\r\n      </figure>\r\n    );\r\n  }\r\n\r\n}","import Loading from './Loading';\r\nexport default Loading;\r\n","import React, { Component } from 'react';\r\n\r\nimport './Loading.css';\r\n\r\nexport default class Loading extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"bullseye\">\r\n        <div className=\"container\">\r\n          <div className=\"dash uno\"></div>\r\n          <div className=\"dash dos\"></div>\r\n          <div className=\"dash tres\"></div>\r\n          <div className=\"dash cuatro\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n// Myndir sóttar gegnum bakenda með redux\r\nimport { getMovies } from '../../actions/movies';\r\n\r\nimport Button from '../../components/button';\r\nimport Movie from '../../components/movie';\r\nimport Loading from '../../components/loading';\r\n\r\nimport { getStoredMovies } from '../../storedMovies';\r\n\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n\r\n  state = {\r\n    allMovies: null,\r\n    movies: null,\r\n    done: false,\r\n    cinemas: [\r\n      { name: \"Álfabakki\", pushed: false },\r\n      { name: \"Borgarbíó\", pushed: false },\r\n      { name: \"Bíó Paradís\", pushed: false },\r\n      { name: \"Sambíóin Egilshöll\", pushed: false },\r\n      { name: \"Háskólabíó\", pushed: false },\r\n      { name: \"Kringlubíó\", pushed: false },\r\n      { name: \"Laugarásbíó\", pushed: false },\r\n      { name: \"Sambíóin, Akureyri\", pushed: false },\r\n      { name: \"Sambíóin, Keflavík\", pushed: false },\r\n      { name: \"Smárabíó\", pushed: false },\r\n    ],\r\n    sortMovies: false,\r\n  }\r\n\r\n\r\n  async componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    const movies = await getStoredMovies();\r\n    if (movies) {\r\n      this.setState({ allMovies: movies, movies, done: true });\r\n    }\r\n    else {\r\n      await dispatch(getMovies());\r\n    }\r\n    const cinemas = JSON.parse(window.localStorage.getItem('cinemas'));\r\n    if (cinemas) {\r\n      this.setState({ cinemas, sortMovies: true });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { isFetching, movies, message } = this.props;\r\n    const { done, sortMovies, cinemas } = this.state;\r\n\r\n    if (!isFetching && !done) {\r\n      if (movies) { // Myndir sóttar gegnum bakenda\r\n        this.setState({ allMovies: movies, movies, done: true });\r\n      } else if (message) {\r\n        console.error(message);\r\n      }\r\n    } else if (isFetching) {\r\n      console.info('Fetching movies');\r\n    } else if (sortMovies) {\r\n      this.sortMovies(cinemas);\r\n    }\r\n  }\r\n\r\n  cinemaButton(index) {\r\n    const { cinemas } = this.state;\r\n    cinemas[index].pushed = !cinemas[index].pushed;\r\n    this.sortMovies(cinemas);\r\n  }\r\n\r\n  sortMovies(cinemas) {\r\n    const { allMovies } = this.state;\r\n    const newMovieList = [];\r\n    allMovies.forEach(movie => {\r\n      let showMovie = false;\r\n      cinemas.forEach(cinema => {\r\n        if (!cinema.pushed) {\r\n          const { showtimes } = movie;\r\n          const filtered = showtimes.filter(showtime => showtime.cinema.name === cinema.name);\r\n          if (filtered.length > 0) { // Mynd er sýnd í a.m.k. einu bíóhúsi\r\n            showMovie = true;\r\n            return;\r\n          }\r\n        }\r\n      });\r\n      if (showMovie) {\r\n        newMovieList.push(movie);\r\n      }\r\n    });\r\n    // Geyma völdu kvikmyndahús\r\n    window.localStorage.setItem('cinemas', JSON.stringify(cinemas));\r\n\r\n    this.setState({ movies: newMovieList, cinemas, sortMovies: false });\r\n  }\r\n\r\n  render() {\r\n    const { message, isFetching } = this.props;\r\n    const { cinemas, movies } = this.state;\r\n\r\n    if (isFetching) return (<Loading />);\r\n\r\n    if (message) return (<p>{message}</p>);\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"cinemas\">\r\n          <h3>Bíóhús</h3>\r\n          {cinemas.map((cinema, index) => {\r\n            return(\r\n              <Button\r\n                key={index}\r\n                pushed={cinema.pushed}\r\n                onClick={() => this.cinemaButton(index)}\r\n              >\r\n              {cinema.name}\r\n              </Button>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"movies\">\r\n          {movies &&\r\n            movies.map((movie) => {\r\n              return (\r\n                <Movie\r\n                  key={movie.id}\r\n                  movie={movie}\r\n                />\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    movies: state.movies.movies,\r\n    isFetching: state.movies.isFetching,\r\n    message: state.movies.message,\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps)(Home));","import Home from './Home';\r\nexport default Home;","import api from '../api';\r\n\r\nexport const UPCOMING_MOVIES_REQUEST = 'UPCOMING_MOVIES_REQUEST';\r\nexport const UPCOMING_MOVIES_ERROR = 'UPCOMING_MOVIES_ERROR';\r\nexport const UPCOMING_MOVIES_SUCCESS = 'UPCOMING_MOVIES_SUCCESS';\r\n\r\nfunction requestMovies() {\r\n  return {\r\n    type: UPCOMING_MOVIES_REQUEST,\r\n    isFetchingUpcoming: true,\r\n    upcomingMovies: null,\r\n  }\r\n}\r\n\r\nfunction moviesError(message) {\r\n  return {\r\n    type: UPCOMING_MOVIES_ERROR,\r\n    isFetchingUpcoming: false,\r\n    upcomingMovies: null,\r\n    message,\r\n  }\r\n}\r\n\r\nfunction receiveMovies(upcomingMovies) {\r\n  return {\r\n    type: UPCOMING_MOVIES_SUCCESS,\r\n    isFetchingUpcoming: false,\r\n    upcomingMovies,\r\n  }\r\n}\r\n\r\nexport const getUpcomingMovies = () => {\r\n  return async (dispatch) => {\r\n    dispatch(requestMovies());\r\n\r\n    let response;\r\n    try {\r\n      response = await api.getUpcomingMovies();\r\n    } catch (e) {\r\n      return dispatch(moviesError(e));\r\n    }\r\n\r\n    if (response.status === 401) {\r\n      dispatch(moviesError(response.result));\r\n    } else {\r\n      const { result } = response;\r\n      dispatch(receiveMovies(result));\r\n    }\r\n  }\r\n}","import Showtimes from './Showtimes';\r\nexport default Showtimes;\r\n","import React, { Component } from 'react';\r\n\r\nimport Button from '../button';\r\n\r\nimport './Showtimes.css';\r\n\r\nexport default class Showtimes extends Component {\r\n\r\n  render() {\r\n    const { showtimes } = this.props;\r\n    return (\r\n      <div className=\"showtimes\">\r\n        {showtimes &&\r\n          showtimes.map(theater => {\r\n            const { name, id } = theater.cinema;\r\n            const { schedule } = theater;\r\n            return (\r\n              <section key={id} className=\"theater-showtimes\">\r\n                <h1>{name}</h1>\r\n                <div className=\"schedules\">\r\n                  {schedule.map((schedule, index) => {\r\n                    return (\r\n                      <a key={`${id}${index}`} href={schedule.purchase_url}>\r\n                        <Button type=\"schedule\">\r\n                          <p>{schedule.time}</p>\r\n                        </Button>\r\n                      </a>\r\n                    )\r\n                  })\r\n                  }\r\n                </div>\r\n              </section>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport { getMovies } from '../../actions/movies';\r\nimport { getUpcomingMovies } from '../../actions/upcomingMovies';\r\nimport { getStoredMovies, getStoredUpcomingMovies } from '../../storedMovies';\r\n\r\nimport Loading from '../../components/loading';\r\nimport Showtimes from '../../components/showtimes';\r\n\r\nimport { months, listDirectors } from '../../utils';\r\n\r\nimport './MoviePage.css';\r\n\r\nconst basename = process.env.PUBLIC_URL || '';\r\n\r\nclass MoviePage extends Component {\r\n\r\n  state = {\r\n    movies: null,\r\n    upcomingMovies: null,\r\n    doneMovies: false,\r\n    doneUpcoming: false,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    const movies = await getStoredMovies();\r\n    const upcomingMovies = await getStoredUpcomingMovies();\r\n    if (movies) {\r\n      this.setState({ movies, doneMovies: true });\r\n    } else {\r\n      dispatch(getMovies());\r\n    }\r\n    if (upcomingMovies) {\r\n      this.setState({ upcomingMovies, doneUpcoming: true });\r\n    } else {\r\n      dispatch(getUpcomingMovies());\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { isFetching, isFetchingUpcoming, movies, upcomingMovies, message } = this.props;\r\n    const { doneMovies, doneUpcoming } = this.state;\r\n\r\n    if (!isFetching || !isFetchingUpcoming) {\r\n      if (movies && !doneMovies) {\r\n        this.setState({ movies, doneMovies: true });\r\n      } else if (upcomingMovies && !doneUpcoming) {\r\n        this.setState({ upcomingMovies, doneUpcoming: true });\r\n      } else if (message) {\r\n        console.error(message);\r\n      }\r\n    } else {\r\n      console.info('Fetching movies');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { message, isFetching, isFetchingUpcoming } = this.props;\r\n    const { movies, upcomingMovies } = this.state;\r\n\r\n    if (message) return (<p>{message}</p>);\r\n\r\n    if (isFetching || isFetchingUpcoming || !movies || !upcomingMovies) return (<Loading />);\r\n\r\n    const { match } = this.props;\r\n    const { id } = match.params;\r\n\r\n    // Finna mynd og vita hvort hún sé væntanleg eða ekki\r\n    let movie = movies.filter(movie => movie.id === parseInt(id));\r\n\r\n    let isUpcoming = false;\r\n    if (movie.length === 0) {\r\n      movie = upcomingMovies.filter(movie => movie.id === parseInt(id));\r\n      isUpcoming = true;\r\n    }\r\n\r\n    if (movie.length === 0) return (<h2 className=\"movie-notfound\">Mynd fannst ekki</h2>);\r\n\r\n    const {\r\n      title,\r\n      poster,\r\n      ratings,\r\n      ids,\r\n      plot,\r\n      showtimes,\r\n      directors_abridged,\r\n      trailers,\r\n    } = movie[0];\r\n\r\n    let ratingSection, dateSection;\r\n    if (isUpcoming) { // Ef að mynd er væntanleg þá er birt útgáfudagur\r\n      const date = new Date(movie[0]['release-dateIS']);\r\n      const dateString = `${date.getDate()}. ${months[date.getMonth()]} ${date.getFullYear()}`;\r\n      dateSection = (\r\n        <h2 className=\"movie-page_release-date\">{dateString}</h2>\r\n      );\r\n    } else { // Annars er birt imdb einkunnin\r\n      const { imdb } = ratings;\r\n      ratingSection = (\r\n        <div className=\"movie-page-rating\">\r\n          <p>{imdb}</p>\r\n          <a href={\"https://www.imdb.com/title/tt\" + ids.imdb}>\r\n            <img className=\"logo\" src={`${basename}/imdb.png`} alt=\"imdb logo\" />\r\n          </a>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const { results } = trailers[0];\r\n    let trailerPlaylist = \"\";\r\n    results.forEach(result => trailerPlaylist += \",\" + result.key);\r\n\r\n    const directors = listDirectors(directors_abridged);\r\n\r\n    return (\r\n      <div className=\"movie-page\">\r\n        <Helmet title={title} />\r\n        <div className=\"movie-about\">\r\n          <img src={poster} alt={\"mynd fyrir bíómyndina \" + title} />\r\n          <div className=\"movie-info\">\r\n            {dateSection}\r\n            <h1 className=\"movie-title\">{title}</h1>\r\n            {ratingSection}\r\n            <p>{directors}</p>\r\n            <p className=\"plot-text\">{plot}</p>\r\n          </div>\r\n        </div>\r\n        {results.length > 0 &&\r\n          <div className=\"youtubevideowrap\">\r\n            <div className=\"video-container\">\r\n              <iframe\r\n                title=\"trailers\"\r\n                width=\"640\"\r\n                height=\"352\"\r\n                align=\"center\"\r\n                src={`https://www.youtube.com/embed/?playlist=${trailerPlaylist}`}\r\n                frameBorder=\"0\"\r\n                allow=\"autoplay; encrypted-media\"\r\n                allowFullScreen>\r\n              </iframe>\r\n            </div>\r\n          </div>\r\n        }\r\n        <Showtimes showtimes={showtimes} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    upcomingMovies: state.upcomingMovies.upcomingMovies,\r\n    isFetchingUpcoming: state.upcomingMovies.isFetchingUpcoming,\r\n    movies: state.movies.movies,\r\n    isFetching: state.movies.isFetching,\r\n    message: state.movies.message,\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps)(MoviePage));","import MoviePage from './MoviePage';\r\nexport default MoviePage;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n// Myndir sóttar gegnum bakenda með redux\r\nimport { getUpcomingMovies } from '../../actions/upcomingMovies';\r\n\r\nimport Movie from '../../components/movie';\r\nimport Loading from '../../components/loading';\r\n\r\nimport { getStoredUpcomingMovies } from '../../storedMovies';\r\n\r\nimport './UpcomingMovies.css';\r\n\r\nclass UpcomingMovies extends Component {\r\n\r\n  state = {\r\n    movies: null,\r\n    done: false,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    const movies = await getStoredUpcomingMovies();\r\n    if (movies) {\r\n      const sortedMovies = this.sortMovies(movies);\r\n      this.setState({ movies: sortedMovies, done: true });\r\n    }\r\n    else {\r\n      await dispatch(getUpcomingMovies());\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { isFetching, movies, message } = this.props;\r\n    const { done } = this.state;\r\n\r\n    if (!isFetching && !done) {\r\n      if (movies) { // Myndir sóttar gegnum bakenda\r\n        const sortedMovies = this.sortMovies(movies);\r\n        this.setState({ movies: sortedMovies, done: true });\r\n      } else if (message) {\r\n        console.error(message);\r\n      }\r\n    } else if (isFetching) {\r\n      console.info('Fetching movies');\r\n    }\r\n  }\r\n\r\n  sortMovies(movies) {\r\n    const newMovies = movies.map(movie => {\r\n      const date = new Date(movie['release-dateIS']);\r\n      movie.date = date;\r\n      return movie;\r\n    });\r\n    newMovies.sort((movieA, movieB) => movieA.date - movieB.date);\r\n\r\n    return newMovies;\r\n  }\r\n\r\n  render() {\r\n    const { message, isFetching } = this.props;\r\n    const { movies } = this.state;\r\n\r\n    if (isFetching) return (<Loading />);\r\n\r\n    if (message) return (<p>{message}</p>);\r\n\r\n    return (\r\n      <div className=\"movies\">\r\n        {movies &&\r\n          movies.map((movie) => {\r\n            return (\r\n              <Movie\r\n                key={movie.id}\r\n                movie={movie}\r\n                upcoming={true}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    movies: state.upcomingMovies.upcomingMovies,\r\n    isFetching: state.upcomingMovies.isFetchingUpcoming,\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps)(UpcomingMovies));","import UpcomingMovies from './UpcomingMovies';\r\nexport default UpcomingMovies;","import React, { Component } from 'react';\nimport Helmet from 'react-helmet';\nimport { Route, Switch } from 'react-router-dom'\nimport CookieConsent from 'react-cookie-consent';\n\nimport Header from './components/header';\n\nimport NotFound from './routes/not-found';\nimport Home from './routes/home';\nimport MoviePage from './routes/moviePage';\nimport UpcomingMovies from './routes/upcomingMovies';\n\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <main className=\"main\">\n        <Helmet defaultTitle=\"Bíómyndir landsins\" titleTemplate=\"%s\" />\n        <Header />\n        <div className=\"main__content\">\n          <Switch location={this.props.location}>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/movie/:id\" component={MoviePage} />\n            <Route path=\"/upcoming\" component={UpcomingMovies} />\n            {/* todo fleiri route */}\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n        <footer className=\"footer\">\n          <hr />\n          <p>&copy; {new Date().getFullYear()} - Bíómyndir landsins</p>\n        </footer>\n        <CookieConsent\n          buttonText=\"Allt í góðu\"\n          buttonStyle={{ cursor: \"pointer\" }}\n          >\n          Þessi síða notar kökur til að bæta notendaupplifunina.\n        </CookieConsent>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import {\r\n  MOVIES_REQUEST,\r\n  MOVIES_ERROR,\r\n  MOVIES_SUCCESS,\r\n} from '../actions/movies';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  movies: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case MOVIES_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n        movies: action.movies,\r\n      };\r\n\r\n    case MOVIES_ERROR:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n        movies: action.movies,\r\n        message: action.message,\r\n      };\r\n\r\n    case MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n        movies: action.movies,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import {\r\n  UPCOMING_MOVIES_REQUEST,\r\n  UPCOMING_MOVIES_ERROR,\r\n  UPCOMING_MOVIES_SUCCESS,\r\n} from '../actions/upcomingMovies';\r\n\r\nconst initialState = {\r\n  isFetchingUpcoming: false,\r\n  upcomingMovies: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case UPCOMING_MOVIES_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetchingUpcoming: action.isFetchingUpcoming,\r\n        upcomingMovies: action.upcomingMovies,\r\n      };\r\n\r\n    case UPCOMING_MOVIES_ERROR:\r\n      return {\r\n        ...state,\r\n        isFetchingUpcoming: action.isFetchingUpcoming,\r\n        upcomingMovies: action.upcomingMovies,\r\n        message: action.message,\r\n      };\r\n\r\n    case UPCOMING_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetchingUpcoming: action.isFetchingUpcoming,\r\n        upcomingMovies: action.upcomingMovies,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from 'redux';\r\nimport movies from './movies';\r\nimport upcomingMovies from './upcomingMovies';\r\n\r\nexport default combineReducers({\r\n  movies,\r\n  upcomingMovies,\r\n});","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport rootReducer from './reducers';\nimport ScrollToTop from './ScrollToTop';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* basename notað vegna github pages */}\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <ScrollToTop>\n        <App />\n      </ScrollToTop>\n    </BrowserRouter>\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}