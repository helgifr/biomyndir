{"version":3,"sources":["components/header/index.js","components/header/Header.js","routes/not-found/index.js","routes/not-found/NotFound.js","storedMovies.js","api.js","actions/movies.js","components/button/Button.js","components/button/index.js","components/movie/index.js","components/movie/Movie.js","components/loading/index.js","components/loading/Loading.js","routes/home/Home.js","routes/home/index.js","routes/moviePage/MoviePage.js","routes/moviePage/index.js","App.js","reducers/movies.js","reducers/index.js","ScrollToTop.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","style","textDecoration","Component","NotFound","Helmet_default","title","getStoredMovies","_getStoredMovies","apply","this","arguments","_callee","storedMovies","timestamp","movies","regenerator_default","wrap","_context","prev","next","JSON","parse","window","localStorage","getItem","Date","abrupt","stop","setStoredMovies","_x","_setStoredMovies","_callee2","data","_context2","console","log","setItem","stringify","baseurl","process","options","url","response","result","headers","authorization","method","concat","fetch","sent","json","status","id","token","now","undefined","getTime","value","getToken","x-access-token","Content-Type","_callee3","body","record","_context3","username","password","api","getMovie","getMovies","MOVIES_REQUEST","MOVIES_ERROR","MOVIES_SUCCESS","requestMovies","type","isFetching","moviesError","message","receiveMovies","_ref","Object","asyncToGenerator","mark","dispatch","t0","Button","_this$props","props","children","onClick","pushed","classes","defaultProps","Movie","movie","poster","ratings","src","alt","imdb","Loading","Home","state","allMovies","done","cinemas","name","sortMovies","setState","prevProps","prevState","_this$state","info","warn","index","newMovieList","forEach","showMovie","cinema","showtimes","filter","showtime","length","push","_this2","_this$props2","_this$state2","loading","map","components_button","key","cinemaButton","components_movie","withRouter","connect","MoviePage","match","params","parseInt","_movie$","ids","plot","directors_abridged","trailers","results","trailerPlaylist","directors","i","href","width","height","align","frameBorder","allow","allowFullScreen","theater","_theater$cinema","schedule","purchase_url","time","App","defaultTitle","titleTemplate","header","Switch","location","Route","path","exact","component","getFullYear","initialState","combineReducers","action","objectSpread","ScrollToTop","scrollTo","React","Boolean","hostname","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","react_redux_es","BrowserRouter","basename","src_ScrollToTop","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d1443e07.chunk.js","sourcesContent":["import Header from './Header';\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Header.css';\r\n\r\n/* todo aðrar útgáfur af takka fyrir disabled, minni takka fyrir logout og \"warning\" takka */\r\n\r\nexport default class Header extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"nav-bar\">\r\n        <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n          <p className=\"home-button\">Heim</p>\r\n        </Link>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n}","import NotFound from './NotFound';\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\nexport default class Home extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Helmet title=\"Síða fannst ekki\" />\r\n        <p>Síða fannst ekki</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export async function getStoredMovies() {\r\n  const storedMovies = JSON.parse(window.localStorage.getItem('movies'));\r\n  \r\n  if (storedMovies) {\r\n    const { timestamp } = storedMovies;\r\n    if (new Date() - new Date(timestamp) < 1000 * 60 * 60 * 2) {\r\n      const { movies } = storedMovies;\r\n      return movies;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport async function setStoredMovies(movies) {\r\n  const data = {\r\n    movies,\r\n    timestamp: new Date(),\r\n  }\r\n  console.log(data);\r\n  \r\n  window.localStorage.setItem('movies', JSON.stringify(data));\r\n}","import { setStoredMovies } from './storedMovies';\r\n\r\nconst baseurl = process.env.REACT_APP_SERVICE_URL || \"https://bio-server.herokuapp.com\";\r\n\r\nasync function getMovies() {\r\n\r\n  const options = {\r\n    headers: {\r\n      authorization: 'Bearer Kappa',\r\n    },\r\n    method: 'GET',\r\n  };\r\n\r\n  const url = `${baseurl}`;\r\n\r\n  const response = await fetch(url, options);\r\n\r\n  const result = await response.json();\r\n\r\n  if (response.status === 200) {\r\n    setStoredMovies(result);\r\n  }\r\n\r\n  return { result, status: response.status };\r\n}\r\n\r\nasync function getMovie(id) {\r\n\r\n  let token = JSON.parse(window.localStorage.getItem('token')) || undefined;\r\n  if (token) {\r\n    const { timestamp } = token;\r\n    const now = new Date().getTime();\r\n    console.log(now, timestamp);\r\n    \r\n    if (token === undefined || !token.value || now > timestamp) {\r\n      token = await getToken();\r\n    } else {\r\n      token = token.value;\r\n    }\r\n\r\n  } else {\r\n    token = await getToken();\r\n  }\r\n\r\n  const options = {\r\n    headers: {\r\n      'x-access-token': token,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    method: 'GET',\r\n  };\r\n\r\n  const url = `${baseurl}/movies?imdbid=tt${id}`;\r\n\r\n  const response = await fetch(url, options);\r\n  \r\n\r\n  const result = await response.json();\r\n\r\n  return { result, status: response.status };\r\n}\r\n\r\nasync function getToken() {\r\n  const body = JSON.stringify({ username: 'snati', password: 'helgigummi' });\r\n\r\n  const options = {\r\n    body,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    method: 'POST',\r\n  };\r\n\r\n  const url = `${baseurl}/authenticate`;\r\n\r\n  const response = await fetch(url, options);\r\n\r\n  const result = await response.json();\r\n\r\n  if (response.status === 200) {\r\n    const { token } = result;\r\n    const expirationMS = 1000 * 86400;\r\n    const record = { value: token, timestamp: new Date().getTime() + expirationMS };\r\n    localStorage.setItem('token', JSON.stringify(record));\r\n  }\r\n\r\n  return { result, status: response.status };\r\n}\r\n\r\nexport default {\r\n  getMovie,\r\n  getMovies,\r\n}","import api from '../api';\r\n\r\nexport const MOVIES_REQUEST = 'MOVIES_REQUEST';\r\nexport const MOVIES_ERROR = 'MOVIES_ERROR';\r\nexport const MOVIES_SUCCESS = 'MOVIES_SUCCESS';\r\n\r\nfunction requestMovies() {\r\n  return {\r\n    type: MOVIES_REQUEST,\r\n    isFetching: true,\r\n    movies: null,\r\n  }\r\n}\r\n\r\nfunction moviesError(message) {\r\n  return {\r\n    type: MOVIES_ERROR,\r\n    isFetching: false,\r\n    movies: null,\r\n    message,\r\n  }\r\n}\r\n\r\nfunction receiveMovies(movies) {\r\n  return {\r\n    type: MOVIES_SUCCESS,\r\n    isFetching: false,\r\n    movies,\r\n  }\r\n}\r\n\r\nexport const getMovies = () => {\r\n  return async (dispatch) => {\r\n    dispatch(requestMovies());\r\n\r\n    let response;\r\n    try {\r\n      response = await api.getMovies();\r\n    } catch (e) {\r\n      return dispatch(moviesError(e));\r\n    }\r\n\r\n    if (response.status === 401) {\r\n      dispatch(moviesError(response.result));\r\n    } else {\r\n      const { result } = response;\r\n      dispatch(receiveMovies(result));\r\n    }\r\n  }\r\n}\r\n\r\nexport const getMovie = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(requestMovies());\r\n\r\n    let response;\r\n\r\n    try {\r\n      response = await api.getMovie(id);\r\n    } catch (e) {\r\n      console.log('nbei');\r\n      \r\n      return dispatch(moviesError(e));\r\n    }\r\n\r\n    if (response.status === 401) {\r\n      dispatch(moviesError(response.result));\r\n    } else {\r\n      const { result } = response;\r\n      dispatch(receiveMovies(result));\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.css';\r\n\r\n/* todo aðrar útgáfur af takka fyrir disabled, minni takka fyrir logout og \"warning\" takka */\r\n\r\nexport default class Button extends Component {\r\n\r\n  static propTypes = {\r\n    onClick: PropTypes.func,\r\n    children: PropTypes.node,\r\n  }\r\n\r\n  static defaultProps = {\r\n    className: '',\r\n    onClick: () => {},\r\n  }\r\n\r\n  render() {\r\n    const { children, className, onClick, pushed } = this.props;\r\n\r\n    let classes = `button ${className}`\r\n    if (pushed) classes += ' pushed';\r\n\r\n    return (\r\n      <button onClick={onClick} className={classes}>{children}</button>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","import Button from './Button';\r\nexport default Button;\r\n","import Movie from './Movie';\r\nexport default Movie;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Movie.css';\r\n\r\nconst basename = process.env.PUBLIC_URL || '';\r\n\r\nexport default class Movie extends Component {\r\n\r\n  render() {\r\n    const { movie } = this.props;\r\n    const { title, poster, ratings, id } = movie;\r\n\r\n    return (\r\n      <figure className=\"movieSpace\">\r\n        <Link to={ \"/movie/\" + id} style={{ textDecoration: 'none' }}>\r\n          <img src={poster} alt={\"Mynd fyrir bíómyndina \" + title}/>\r\n          <figcaption>{title}</figcaption>\r\n          <div className=\"rating\">\r\n            <p>{ratings.imdb}</p>\r\n            <img className=\"logo\" src={`${basename}/imdb.png`} alt=\"imdb logo\" />\r\n          </div>\r\n        </Link>\r\n      </figure>\r\n    );\r\n  }\r\n\r\n}","import Loading from './Loading';\r\nexport default Loading;\r\n","import React, { Component } from 'react';\r\n\r\nimport './Loading.css';\r\n\r\nexport default class Loading extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"bullseye\">\r\n        <div className=\"container\">\r\n          <div className=\"dash uno\"></div>\r\n          <div className=\"dash dos\"></div>\r\n          <div className=\"dash tres\"></div>\r\n          <div className=\"dash cuatro\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { getMovies } from '../../actions/movies';\r\n\r\nimport Button from '../../components/button';\r\nimport Movie from '../../components/movie';\r\nimport Loading from '../../components/loading';\r\n\r\nimport { getStoredMovies } from '../../storedMovies';\r\n\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n\r\n  state = {\r\n    allMovies: [],\r\n    movies: [],\r\n    done: false,\r\n    cinemas: [\r\n      { name: \"Álfabakki\", pushed: false },\r\n      { name: \"Borgarbíó\", pushed: false },\r\n      { name: \"Bíó Paradís\", pushed: false },\r\n      { name: \"Sambíóin Egilshöll\", pushed: false },\r\n      { name: \"Háskólabíó\", pushed: false },\r\n      { name: \"Kringlubíó\", pushed: false },\r\n      { name: \"Laugarásbíó\", pushed: false },\r\n      { name: \"Sambíóin, Akureyri\", pushed: false },\r\n      { name: \"Sambíóin, Keflavík\", pushed: false },\r\n      { name: \"Smárabíó\", pushed: false },\r\n    ],\r\n    sortMovies: false,\r\n  }\r\n\r\n\r\n  async componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    const cinemas = JSON.parse(window.localStorage.getItem('cinemas'));\r\n    if (cinemas) {\r\n      this.setState({ cinemas, sortMovies: true });\r\n    }\r\n    const movies = await getStoredMovies();\r\n    if (movies) {\r\n      this.setState({ allMovies: movies, movies, done: true });\r\n    }\r\n    else {\r\n      await dispatch(getMovies());\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { isFetching, movies, message } = this.props;\r\n    const { done, sortMovies, cinemas } = this.state;\r\n\r\n    if (!isFetching && !done) {\r\n      if (movies) {\r\n        this.setState({ allMovies: movies, movies, done: true });\r\n      } else if (message) {\r\n        console.warn(message);\r\n      }\r\n    } else if (isFetching) {\r\n      console.info('Fetching movies');\r\n    } else if (sortMovies) {\r\n      this.sortMovies(cinemas);\r\n    }\r\n  }\r\n\r\n  cinemaButton(index) {\r\n    const { cinemas } = this.state;\r\n    cinemas[index].pushed = !cinemas[index].pushed;\r\n    this.sortMovies(cinemas);\r\n  }\r\n\r\n  sortMovies(cinemas) {\r\n    const { allMovies } = this.state;\r\n    const newMovieList = [];\r\n    allMovies.forEach(movie => {\r\n      let showMovie = false;\r\n      cinemas.forEach(cinema => {\r\n        if (!cinema.pushed) {\r\n          const { showtimes } = movie;\r\n          const filtered = showtimes.filter(showtime => showtime.cinema.name === cinema.name);\r\n          if (filtered.length > 0) {\r\n            showMovie = true;\r\n          }\r\n        }\r\n      });\r\n      if (showMovie) {\r\n        newMovieList.push(movie);\r\n      }\r\n    });\r\n    window.localStorage.setItem('cinemas', JSON.stringify(cinemas));\r\n\r\n    this.setState({ movies: newMovieList, cinemas, sortMovies: false });\r\n  }\r\n\r\n  render() {\r\n    const { message, isFetching } = this.props;\r\n    const { cinemas, movies } = this.state;\r\n\r\n    if (isFetching) return (<Loading />);\r\n\r\n    if (message) return (<p>{message}</p>);\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"cinemas\">\r\n          <h3>Bíóhús</h3>\r\n          {cinemas.map((cinema, index) => {\r\n            return(\r\n              <Button key={index} pushed={cinema.pushed} onClick={() => this.cinemaButton(index)}>{cinema.name}</Button>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"movies\">\r\n          {movies && \r\n            movies.map((movie) => {\r\n              return (\r\n                <Movie\r\n                  key={movie.id}\r\n                  movie={movie}\r\n                />\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    movies: state.movies.movies,\r\n    isFetching: state.movies.isFetching,\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps)(Home));","import Home from './Home';\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport { getMovies } from '../../actions/movies';\r\nimport { getStoredMovies } from '../../storedMovies';\r\n\r\nimport Button from '../../components/button';\r\nimport Loading from '../../components/loading';\r\n\r\nimport './MoviePage.css';\r\n\r\nconst basename = process.env.PUBLIC_URL || '';\r\n\r\nclass MoviePage extends Component {\r\n\r\n  state = {\r\n    movies: null,\r\n    done: false,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const movies = await getStoredMovies();\r\n    if (movies) {\r\n      this.setState({ movies, done: true });\r\n    }\r\n    else {\r\n      const { dispatch } = this.props;\r\n      await dispatch(getMovies());\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { isFetching, movies, message } = this.props;\r\n    const { done, sortMovies, cinemas } = this.state;\r\n\r\n    if (!isFetching && !done) {\r\n      if (movies) {\r\n        this.setState({ movies, done: true });\r\n      } else {\r\n        console.warn(message);\r\n      }\r\n    } else if (isFetching) {\r\n      console.info('Fetching movies');\r\n    } else if (sortMovies) {\r\n      this.sortMovies(cinemas);\r\n    }\r\n  }\r\n\r\n  cinemaButton(index) {\r\n    const { cinemas } = this.state;\r\n    cinemas[index].pushed = !cinemas[index].pushed;\r\n    this.sortMovies(cinemas);\r\n  }\r\n\r\n  render() {\r\n    const { message, isFetching } = this.props;\r\n    const { movies } = this.state;\r\n\r\n    if (message) return (<p>{message}</p>);\r\n\r\n    if (isFetching || !movies) return (<Loading />);\r\n\r\n\r\n    const { match } = this.props;\r\n    const { id } = match.params;\r\n\r\n    const movie = movies.filter(movie => movie.id === parseInt(id));\r\n\r\n    const {\r\n      title,\r\n      poster,\r\n      ratings,\r\n      ids,\r\n      plot,\r\n      showtimes,\r\n      directors_abridged,\r\n      trailers,\r\n    } = movie[0];\r\n\r\n    const { imdb } = ratings;\r\n    const { results } = trailers[0];\r\n\r\n    let trailerPlaylist = \"\";\r\n    results.forEach(result => trailerPlaylist += \",\" + result.key);\r\n\r\n    let directors = `Leikstjóri: ${directors_abridged[0].name}`;\r\n    if (directors_abridged.length > 1) {\r\n      directors = 'Leikstjórar: ' + directors_abridged[0].name;\r\n      for (let i = 1; i < directors_abridged.length; i++) {\r\n        if (i === directors_abridged.length-1) {\r\n          directors += ` og ${directors_abridged[i].name}`;\r\n        } else {\r\n          directors += `, ${directors_abridged[i].name}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"movie-page\">\r\n        <Helmet title={title} />\r\n        <div className=\"movie-about\">\r\n          <img src={poster} alt={\"mynd fyrir bíómyndina \" + title} />\r\n          <div className=\"movie-info\">\r\n            <h1 className=\"movie-title\">{title}</h1>\r\n            <div className=\"movie-page-rating\">\r\n                <p>{imdb}</p>\r\n                <a href={\"https://www.imdb.com/title/tt\" + ids.imdb}>\r\n                  <img className=\"logo\" src={`${basename}/imdb.png`} alt=\"imdb logo\" />\r\n                </a>\r\n              </div>\r\n            <p>{directors}</p>\r\n            <p className=\"plot-text\">{plot}</p>\r\n          </div>\r\n        </div>\r\n        {results.length > 0 &&\r\n          <div className=\"youtubevideowrap\">\r\n            <div className=\"video-container\">\r\n              <iframe title=\"trailers\" width=\"640\" height=\"352\" align=\"center\" src={`https://www.youtube.com/embed/?playlist=${trailerPlaylist}`} frameBorder=\"0\" allow=\"autoplay; encrypted-media\" allowFullScreen></iframe>\r\n            </div>\r\n          </div>\r\n        }\r\n        <div className=\"showtimes\">\r\n          {movie &&\r\n            showtimes.map(theater => {\r\n              const { name, id } = theater.cinema;\r\n              const { schedule } = theater;\r\n              return (\r\n                <section key={id} className=\"theater-showtimes\">\r\n                  <h1>{name}</h1>\r\n                  <div className=\"schedules\">\r\n                    {schedule.map((schedule, index) => {\r\n                      return (\r\n                        <a key={`${id}${index}`}href={schedule.purchase_url}>\r\n                          <Button className=\"schedule\">\r\n                            <p>{schedule.time}</p>\r\n                          </Button>\r\n                        </a>\r\n                      )\r\n                    })\r\n                    }\r\n                  </div>\r\n                </section>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    movies: state.movies.movies,\r\n    isFetching: state.movies.isFetching,\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps)(MoviePage));","import MoviePage from './MoviePage';\r\nexport default MoviePage;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { Route, Switch, withRouter } from 'react-router-dom'\n\nimport Header from './components/header';\n\nimport NotFound from './routes/not-found';\nimport Home from './routes/home';\nimport MoviePage from './routes/moviePage';\n\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <main className=\"main\">\n        <Helmet defaultTitle=\"Bíómyndir landsins\" titleTemplate=\"%s\" />\n        <Header />\n        <div className=\"main__content\">\n          <Switch location={this.props.location}>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/movie/:id\" component={MoviePage} />\n            {/* todo fleiri route */}\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n        <footer className=\"footer\">\n          <hr />\n          <p>&copy; {new Date().getFullYear()} - Bíómyndir landsins</p>\n        </footer>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.movies.movies,\n    isFetching: state.movies.isFetching,\n  }\n}\nexport default withRouter(connect(mapStateToProps)(App));\n","import {\r\n  MOVIES_REQUEST,\r\n  MOVIES_ERROR,\r\n  MOVIES_SUCCESS,\r\n} from '../actions/movies';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  movies: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case MOVIES_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n        movies: action.movies,\r\n      };\r\n\r\n    case MOVIES_ERROR:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n        movies: action.movies,\r\n        message: action.message\r\n      };\r\n\r\n    case MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n        movies: action.movies,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from 'redux';\r\nimport movies from './movies';\r\n\r\nexport default combineReducers({\r\n  movies,\r\n});","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport rootReducer from './reducers';\nimport ScrollToTop from './ScrollToTop';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <ScrollToTop>\n        <App />\n      </ScrollToTop>\n    </BrowserRouter>\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}